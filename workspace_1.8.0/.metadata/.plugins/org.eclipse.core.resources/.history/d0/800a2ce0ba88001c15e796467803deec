/*
 * msp.c
 *
 *  Created on: Feb 8, 2022
 *      Author: st
 */

#include "stm32f4xx_hal.h"

void HAL_MspInit()
{
	//1.setup the priority grouping of the arm cortex mx processor
		HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
	//2. Enable the required system exeception of the arm cortex mx processor
		SCB->SHCSR |= 0x7 << 16; // user fault ,memory fault, bus fault

	//3.configure the priority for the system exception
		HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
		HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
		HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
}


void HAL_UART_MspInit(UART_HandleTypeDef *huart)
{
	GPIO_InitTypeDef gpio_uart;
	//1. enable the clock for the USART2 peripheral
	__HAL_RCC_USART2_CLK_ENABLE();
	//2. Do the pin muxing configurations

	//SET THE GPIO PIN TO UART MODE
	gpio_uart.Pin = GPIO_PIN_2;
	gpio_uart.Pin = GPIO_PIN_3;
	gpio_uart.Mode = GPIO_MODE_AF_PP;
	gpio_uart.Speed = GPIO_SPEED_FREQ_LOW;
	gpio_uart.Pull = GPIO_PULLUP; //Most of the comunication are pulldown
	gpio_uart.Alternate = GPIO_AF7_USART2;
	HAL_GPIO_init(GPIOA,&gpio_uart);

	//3. Enable the IRQ and set up the priority (NVIC settings)

	HAL_NVIC_EnableIRQ(USART2_IRQn);
	HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);





















}
